{"remainingRequest":"/Users/yurii/dev/donato2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yurii/dev/donato2/src/components/Tabs/Tabs.vue?vue&type=style&index=0&id=d44a47e2&lang=scss&scoped=true&","dependencies":[{"path":"/Users/yurii/dev/donato2/src/components/Tabs/Tabs.vue","mtime":1631888606000},{"path":"/Users/yurii/dev/donato2/node_modules/css-loader/dist/cjs.js","mtime":1662625893020},{"path":"/Users/yurii/dev/donato2/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1662625895374},{"path":"/Users/yurii/dev/donato2/node_modules/postcss-loader/src/index.js","mtime":1662625890815},{"path":"/Users/yurii/dev/donato2/node_modules/sass-loader/dist/cjs.js","mtime":1662625893703},{"path":"/Users/yurii/dev/donato2/node_modules/cache-loader/dist/cjs.js","mtime":1662625893501},{"path":"/Users/yurii/dev/donato2/node_modules/vue-loader/lib/index.js","mtime":1662625894809}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJ+QC9hc3NldHMvc2Fzcy9ub3ctdWkta2l0L3ZhcmlhYmxlcyI7CkBpbXBvcnQgIn5AL2Fzc2V0cy9zYXNzL25vdy11aS1raXQvdGFicyI7Cg=="},{"version":3,"sources":["Tabs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;AACA","file":"Tabs.vue","sourceRoot":"src/components/Tabs","sourcesContent":["<template>\n  <div>\n    <div\n      :class=\"\n        [{'col-md-4': vertical && !tabNavWrapperClasses},\n         {'col-12': centered && !tabNavWrapperClasses},\n         tabNavWrapperClasses]\"\n    >\n      <ul\n        class=\"nav\"\n        role=\"tablist\"\n        v-bind=\"$attrs\"\n        :class=\"\n          [ tabTypeClass,\n            {'nav-pills-icons': icons},\n            {'nav-pills': pills},\n            {'nav-tabs': !pills},\n            {'flex-column': vertical},\n            {'justify-content-center': centered},\n            tabNavClasses\n          ]\"\n      >\n        <li\n          v-for=\"tab in tabs\"\n          :key=\"tab.id\"\n          class=\"nav-item active\"\n          data-toggle=\"tab\"\n          role=\"tablist\"\n          aria-expanded=\"true\"\n        >\n          <a\n            data-toggle=\"tab\"\n            role=\"tablist\"\n            :href=\"`#${tab.id}`\"\n            :aria-expanded=\"tab.active\"\n            class=\"nav-link\"\n            :class=\"{active: tab.active}\"\n            @click.prevent=\"activateTab(tab)\"\n          >\n            <tab-item-content :tab=\"tab\" />\n          </a>\n        </li>\n      </ul>\n    </div>\n    <div\n      class=\"tab-content\"\n      :class=\"[{'tab-space': !vertical && !noContentSpace}, 'text-left', {'col-md-8': vertical && !tabContentClasses}, tabContentClasses]\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'Tabs',\n    components: {\n      TabItemContent: {\n        props: ['tab'],\n        render(h) {\n          return h('div', [this.tab.$slots.label || this.tab.label])\n        }\n      }\n    },\n    provide() {\n      return {\n        addTab: this.addTab,\n        removeTab: this.removeTab\n      }\n    },\n    inheritAttrs: false,\n    props: {\n      type: {\n        type: String,\n        default: 'default',\n        validator: (value) => {\n          let acceptedValues = ['primary', 'info', 'success', 'warning', 'danger', 'default', 'neutral'];\n          return acceptedValues.indexOf(value) !== -1\n        }\n      },\n      activeTab: {\n        type: String,\n        default: ''\n      },\n      tabNavWrapperClasses: {\n        type: [String, Object],\n        default: ''\n      },\n      tabNavClasses: {\n        type: [String, Object],\n        default: ''\n      },\n      tabContentClasses: {\n        type: [String, Object],\n        default: ''\n      },\n      vertical: Boolean,\n      noContentSpace: Boolean,\n      icons: Boolean,\n      centered: Boolean,\n      value: String,\n      pills: Boolean\n    },\n    data() {\n      return {\n        tabs: []\n      }\n    },\n    computed: {\n      tabTypeClass(){\n          let baseClass = this.pills ? 'pills': 'tabs';\n          if(this.type){\n            return `nav-${baseClass}-${this.type}`;\n          }\n          return ''\n      }\n    },\n    watch: {\n      value(newVal) {\n        this.findAndActivateTab(newVal);\n      }\n    },\n    mounted() {\n      this.$nextTick(() => {\n        if (this.value) {\n          this.findAndActivateTab(this.value);\n        }\n      })\n    },\n    methods: {\n      findAndActivateTab(label){\n        let tabToActivate = this.tabs.find(t=> t.label === label);\n        if(tabToActivate){\n          this.activateTab(tabToActivate);\n        }\n      },\n      activateTab(tab) {\n        if (this.handleClick) {\n          this.handleClick(tab)\n        }\n        this.deactivateTabs();\n        tab.active = true;\n        this.$emit('input', tab.label || tab.id);\n      },\n      deactivateTabs() {\n        this.tabs.forEach(tab => {\n          tab.active = false\n        });\n      },\n      addTab(tab) {\n        const index = this.$slots.default.indexOf(tab.$vnode)\n        if (!this.activeTab && index === 0) {\n          tab.active = true;\n        }\n        if (this.activeTab === tab.name) {\n          tab.active = true\n        }\n        this.tabs.splice(index, 0, tab)\n      },\n      removeTab(tab) {\n        const tabs = this.tabs\n        const index = tabs.indexOf(tab)\n        if (index > -1) {\n          tabs.splice(index, 1)\n        }\n      }\n    }\n  }\n</script>\n<style lang=\"scss\" scoped>\n  @import \"~@/assets/sass/now-ui-kit/variables\";\n  @import \"~@/assets/sass/now-ui-kit/tabs\";\n</style>\n"]}]}