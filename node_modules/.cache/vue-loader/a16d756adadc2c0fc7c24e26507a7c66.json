{"remainingRequest":"/Users/yurii/dev/donato2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yurii/dev/donato2/src/components/Badge.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yurii/dev/donato2/src/components/Badge.vue","mtime":1631888606000},{"path":"/Users/yurii/dev/donato2/node_modules/cache-loader/dist/cjs.js","mtime":1662625893501},{"path":"/Users/yurii/dev/donato2/node_modules/babel-loader/lib/index.js","mtime":1662625890851},{"path":"/Users/yurii/dev/donato2/node_modules/cache-loader/dist/cjs.js","mtime":1662625893501},{"path":"/Users/yurii/dev/donato2/node_modules/vue-loader/lib/index.js","mtime":1662625894809}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQmFkZ2UnLAogIHByb3BzOiB7CiAgICB0YWc6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnc3BhbicKICAgIH0sCiAgICBocmVmOiBTdHJpbmcsCiAgICB0eXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2RlZmF1bHQnLAogICAgICB2YWxpZGF0b3I6ICh2YWx1ZSkgPT4gewogICAgICAgIGxldCBhY2NlcHRlZFZhbHVlcyA9IFsncHJpbWFyeScsICdpbmZvJywgJ3N1Y2Nlc3MnLCAnd2FybmluZycsICdkYW5nZXInLCAnZGVmYXVsdCcsICduZXV0cmFsJ107CiAgICAgICAgcmV0dXJuIGFjY2VwdGVkVmFsdWVzLmluZGV4T2YodmFsdWUpICE9PSAtMQogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY29tcG9uZW50VGFnKCkgewogICAgICByZXR1cm4gdGhpcy5ocmVmID8gJ2EnIDogdGhpcy50YWc7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Badge.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Badge.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <component\n    :is=\"componentTag\"\n    class=\"n-badge\"\n    :class=\"`badge-${type}`\"\n    :href=\"href\"\n  >\n    <slot />\n  </component>\n</template>\n<script>\n  export default {\n    name: 'Badge',\n    props: {\n      tag: {\n        type: String,\n        default: 'span'\n      },\n      href: String,\n      type: {\n        type: String,\n        default: 'default',\n        validator: (value) => {\n          let acceptedValues = ['primary', 'info', 'success', 'warning', 'danger', 'default', 'neutral'];\n          return acceptedValues.indexOf(value) !== -1\n        }\n      }\n    },\n    computed: {\n      componentTag() {\n        return this.href ? 'a' : this.tag;\n      }\n    }\n  }\n</script>\n<style>\n</style>\n"]}]}