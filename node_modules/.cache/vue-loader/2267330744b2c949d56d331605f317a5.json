{"remainingRequest":"/Users/yurii/dev/donato2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yurii/dev/donato2/src/pages/example-pages/DonatoPage.vue?vue&type=template&id=30bcef7a&","dependencies":[{"path":"/Users/yurii/dev/donato2/src/pages/example-pages/DonatoPage.vue","mtime":1662668191243},{"path":"/Users/yurii/dev/donato2/node_modules/cache-loader/dist/cjs.js","mtime":1662625893501},{"path":"/Users/yurii/dev/donato2/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1662625895392},{"path":"/Users/yurii/dev/donato2/node_modules/cache-loader/dist/cjs.js","mtime":1662625893501},{"path":"/Users/yurii/dev/donato2/node_modules/vue-loader/lib/index.js","mtime":1662625894809}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9InBhZ2UtaGVhZGVyIHNpZ251cC1wYWdlIHNlY3Rpb24taW1hZ2UiPgogIDxkaXYKICAgIGNsYXNzPSJwYWdlLWhlYWRlci1pbWFnZSIKICAgIHN0eWxlPSJiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2ltZy9iZzE4LmpwZycpIgogIC8+CiAgPGRpdiBjbGFzcz0iY29udGVudCI+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJyb3cgYWxpZ24tY2VudGVyIj4KICAgICAgICA8IS0tIDxkaXYgY2xhc3M9ImNvbC1tZC00IG1sLWF1dG8gbXItYXV0byI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnRvIGluZm8taG9yaXpvbnRhbCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24gaWNvbi1wcmltYXJ5Ij4KICAgICAgICAgICAgICA8aSBjbGFzcz0ibm93LXVpLWljb25zIG1lZGlhLTJfc291bmQtd2F2ZSIgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICA8aDUgY2xhc3M9ImluZm8tdGl0bGUiPgogICAgICAgICAgICAgICAgTWFya2V0aW5nCiAgICAgICAgICAgICAgPC9oNT4KICAgICAgICAgICAgICA8cCBjbGFzcz0iZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgV2UndmUgY3JlYXRlZCB0aGUgbWFya2V0aW5nIGNhbXBhaWduIG9mIHRoZSB3ZWJzaXRlLiBJdCB3YXMgYSB2ZXJ5IGludGVyZXN0aW5nCiAgICAgICAgICAgICAgICBjb2xsYWJvcmF0aW9uLgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImluZm8gaW5mby1ob3Jpem9udGFsIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbiBpY29uLXByaW1hcnkiPgogICAgICAgICAgICAgIDxpIGNsYXNzPSJub3ctdWktaWNvbnMgbWVkaWEtMV9idXR0b24tcGF1c2UiIC8+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgPGg1IGNsYXNzPSJpbmZvLXRpdGxlIj4KICAgICAgICAgICAgICAgIEZ1bGx5IENvZGVkIGluIEhUTUw1CiAgICAgICAgICAgICAgPC9oNT4KICAgICAgICAgICAgICA8cCBjbGFzcz0iZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgV2UndmUgZGV2ZWxvcGVkIHRoZSB3ZWJzaXRlIHdpdGggSFRNTDUgYW5kIENTUzMuIFRoZSBjbGllbnQgaGFzIGFjY2VzcyB0byB0aGUgY29kZQogICAgICAgICAgICAgICAgdXNpbmcgR2l0SHViLgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImluZm8gaW5mby1ob3Jpem9udGFsIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbiBpY29uLWluZm8iPgogICAgICAgICAgICAgIDxpIGNsYXNzPSJub3ctdWktaWNvbnMgdXNlcnNfc2luZ2xlLTAyIiAvPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgIDxoNSBjbGFzcz0iaW5mby10aXRsZSI+CiAgICAgICAgICAgICAgICBCdWlsdCBBdWRpZW5jZQogICAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgICAgPHAgY2xhc3M9ImRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgIFRoZXJlIGlzIGFsc28gYSBGdWxseSBDdXN0b21pemFibGUgQ01TIEFkbWluIERhc2hib2FyZCBmb3IgdGhpcyBwcm9kdWN0LgogICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4gLS0+CiAgICAgICAgPGRpdiA+CgogICAgICAgIDwhLS0gPC9kaXY+IDxkaXYgY2xhc3M9ImNvbC1tZC00IG1yLWF1dG8iPiAtLT4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQgY2FyZC1zaWdudXAgIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5Ij4KICAgICAgICAgICAgICA8cCBjbGFzcz0iZGVzY3JpcHRpb24iPkPQtdGA0LPRltC5INChINC30LHQuNGA0LDRlDwvcD4gCiAgICAgICAgICAgICAgPGg0IGNsYXNzPSJjYXJkLXRpdGxlIHRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgINCd0LAgMTAwINC60L7Qv9GC0LXRgNGW0LIKICAgICAgICAgICAgICA8L2g0PgogICAgICAgICAgICAgIDxwIGNsYXNzPSJkZXNjcmlwdGlvbiI+0JfQsdC40YDQsNGU0LzQviDQvdCwINCy0LXQu9C40LrRgyDQv9Cw0YDRgtGW0Y4g0LfRliAxMDAg0YDQvtC30LLRltC00YPQstCw0LvRjNC90LjRhSDQkdCf0JvQkCBEamkgTWF2aWMgMyDQtNC70Y8g0JfQodCjPC9wPiAKCiAgICAgICAgICAgICAgPHAgY2xhc3M9ImRlc2NyaXB0aW9uIj7Ql9GW0LHRgNCw0L3Qvjxicj4gMTAwMDA8L3A+IAoKICAgICAgICAgICAgICA8cCBjbGFzcz0iZGVzY3JpcHRpb24iPtCm0ZbQu9GMPGJyPiAxMDAwMDA8L3A+IAoKICAgICAgICAgICAgICA8IS0tIDxkaXYgY2xhc3M9InNvY2lhbCB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICA8bi1idXR0b24KICAgICAgICAgICAgICAgICAgcm91bmQKICAgICAgICAgICAgICAgICAgaWNvbgogICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuLXR3aXR0ZXIiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtdHdpdHRlciIgLz4KICAgICAgICAgICAgICAgIDwvbi1idXR0b24+CiAgICAgICAgICAgICAgICA8bi1idXR0b24KICAgICAgICAgICAgICAgICAgcm91bmQKICAgICAgICAgICAgICAgICAgaWNvbgogICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuLWRyaWJiYmxlIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFiIGZhLWRyaWJiYmxlIiAvPgogICAgICAgICAgICAgICAgPC9uLWJ1dHRvbj4KICAgICAgICAgICAgICAgIDxuLWJ1dHRvbgogICAgICAgICAgICAgICAgICByb3VuZAogICAgICAgICAgICAgICAgICBpY29uCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4tZmFjZWJvb2siCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYWIgZmEtZmFjZWJvb2siIC8+CiAgICAgICAgICAgICAgICA8L24tYnV0dG9uPgogICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJjYXJkLWRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgICAgb3IgYmUgY2xhc3NpY2FsCiAgICAgICAgICAgICAgICA8L2g1PgogICAgICAgICAgICAgIDwvZGl2PiAtLT4KICAgICAgICAgICAgICA8ZmctaW5wdXQKICAgICAgICAgICAgICAgIHYtbW9kZWw9ImZvcm0uZmlyc3ROYW1lIgogICAgICAgICAgICAgICAgYWRkb24tbGVmdC1pY29uPSJub3ctdWktaWNvbnMgdXNlcnNfY2lyY2xlLTA4IgogICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkZpcnN0IE5hbWUuLi4iCiAgICAgICAgICAgICAgLz4KCiAgICAgICAgICAgICAgPGZnLWlucHV0CiAgICAgICAgICAgICAgICB2LW1vZGVsPSJmb3JtLmxhc3ROYW1lIgogICAgICAgICAgICAgICAgYWRkb24tbGVmdC1pY29uPSJub3ctdWktaWNvbnMgdGV4dF9jYXBzLXNtYWxsIgogICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9Ikxhc3QgTmFtZS4uLiIKICAgICAgICAgICAgICAvPgoKICAgICAgICAgICAgICA8ZmctaW5wdXQKICAgICAgICAgICAgICAgIHYtbW9kZWw9ImZvcm0uZW1haWwiCiAgICAgICAgICAgICAgICBhZGRvbi1sZWZ0LWljb249Im5vdy11aS1pY29ucyB1aS0xX2VtYWlsLTg1IgogICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IllvdXIgRW1haWwuLi4iCiAgICAgICAgICAgICAgLz4KCiAgICAgICAgICAgICAgPG4tY2hlY2tib3ggdi1tb2RlbD0iZm9ybS5hZ3JlZSI+CiAgICAgICAgICAgICAgICBJIGFncmVlIHRvIHRoZSB0ZXJtcyBhbmQKICAgICAgICAgICAgICAgIDxhIGhyZWY9IiNzb21ldGhpbmciPmNvbmRpdGlvbnM8L2E+LgogICAgICAgICAgICAgIDwvbi1jaGVja2JveD4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWZvb3RlciB0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGJ0bi1yb3VuZCBidG4tbGciCiAgICAgICAgICAgICAgICAgIDpocmVmPSJnZXRBbmRyb2lkTGluaygpIj4KICAgICAgICAgICAgICAgICAgUGF5IHdpdGggQmluYW5jZQogICAgICAgICAgICAgICAgPC9hPgoKICAgICAgICAgICAgICAgIDxuLWJ1dHRvbgogICAgICAgICAgICAgICAgICB0eXBlPSJwcmltYXJ5IgogICAgICAgICAgICAgICAgICByb3VuZAogICAgICAgICAgICAgICAgICBzaXplPSJsZyIKICAgICAgICAgICAgICAgICAgZGF0YS10b2dnbGU9Im1vZGFsIgogICAgICAgICAgICAgICAgICBkYXRhLXRhcmdldD0iI2V4YW1wbGVNb2RhbCIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgSSBoYXZlIG90aGVyIHdhbGxldAogICAgICAgICAgICAgICAgPC9uLWJ1dHRvbj4KCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogIDwvZGl2PgoKICA8bWFpbi1mb290ZXIgLz4KPC9kaXY+Cg=="},null]}